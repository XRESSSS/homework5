from decimal import Decimal
from pywebio.input import input as pw_input, slider, FLOAT
from pywebio.output import put_success, put_warning, put_error

PRICE_ONE_KILO_CALORIE = 0.32541

ENERGY_OSTRICH_EGG = 118
ENERGY_RABBIT = 197
ENERGY_BANANA = 87
ENERGY_PISTACHIOS = 555
ENERGY_WAFFLES = 425
ENERGY_PERCH = 123
ENERGY_KEFIR = 51
ENERGY_PEPPER = 26
ENERGY_PARSLEY = 45

ENERGY_BREAD = 246

total_energy = 0

portion_ostrich_egg = pw_input(f'–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø–æ—Ä—Ü–∏—é —Å—Ç—Ä–∞—É—Å–∏–Ω—ã—Ö —è–∏—Ü ü•ö, –≥—Ä–∞–º–º'
                               f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å {ENERGY_OSTRICH_EGG} –∫–ö–∞–ª/100–≥—Ä', type=FLOAT)
portion_ostrich_egg_energy = round(portion_ostrich_egg * ENERGY_OSTRICH_EGG / 100, 2)
total_energy = total_energy + portion_ostrich_egg_energy
put_success(f'–í—ã –∑–∞–∫–∞–∑–∞–ª–∏ {portion_ostrich_egg} –≥—Ä–∞–º–º–æ–≤ —Å—Ç—Ä–∞—É—Å–∏–Ω—ã—Ö —è–∏—Üü•ö,\n'
            f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –ø–æ—Ä—Ü–∏–∏ {portion_ostrich_egg_energy}\n'
            f'–û–±—â–∞—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: {total_energy}')


portion_rabbit = slider(f'–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø–æ—Ä—Ü–∏—é –∫—Ä–æ–ª–∏–∫–∞üêá, –≥—Ä–∞–º–º'
                        f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å {ENERGY_RABBIT} –∫–ö–∞–ª/100–≥—Ä', min_value=0, max_value=2500)
portion_rabbit_energy = round(portion_rabbit * ENERGY_RABBIT / 100, 2)
total_energy = total_energy + portion_rabbit_energy
put_success(f'–í—ã –∑–∞–∫–∞–∑–∞–ª–∏ {portion_rabbit} –≥—Ä–∞–º–º–æ–≤ –∫—Ä–æ–ª–∏–∫–∞üêá,\n'
            f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –ø–æ—Ä—Ü–∏–∏ {portion_rabbit_energy}\n'
            f'–û–±—â–∞—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: {total_energy}')


portion_banana = pw_input(f'–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø–æ—Ä—Ü–∏—é –±–∞–Ω–∞–Ω–æ–≤üçå, –≥—Ä–∞–º–º'
                          f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å {ENERGY_BANANA} –∫–ö–∞–ª/100–≥—Ä', type=FLOAT)
portion_banana_energy = round(portion_banana * ENERGY_BANANA / 100, 2)
total_energy = total_energy + portion_banana_energy
put_success(f'–í—ã –∑–∞–∫–∞–∑–∞–ª–∏ {portion_banana} –≥—Ä–∞–º–º–æ–≤ –±–∞–Ω–∞–Ω–∞üçå,\n'
            f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –ø–æ—Ä—Ü–∏–∏ {portion_banana_energy}\n'
            f'–û–±—â–∞—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: {total_energy}')

portion_pistachios = pw_input(f'–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø–æ—Ä—Ü–∏—é —Ñ–∏—Å—Ç–∞—à–µ–∫, –≥—Ä–∞–º–º'
                          f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å {ENERGY_PISTACHIOS} –∫–ö–∞–ª/100–≥—Ä', type=FLOAT)
portion_pistachios_energy = round(portion_pistachios * ENERGY_PISTACHIOS / 100, 2)
total_energy = total_energy + portion_pistachios_energy
put_success(f'–í—ã –∑–∞–∫–∞–∑–∞–ª–∏ {portion_pistachios} –≥—Ä–∞–º–º–æ–≤ —Ñ–∏—Å—Ç–∞—à–µ–∫,\n'
            f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –ø–æ—Ä—Ü–∏–∏ {portion_pistachios_energy}\n'
            f'–û–±—â–∞—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: {total_energy}')

portion_waffles = pw_input(f'–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø–æ—Ä—Ü–∏—é –≤–∞—Ñ–ª–µ–π, –≥—Ä–∞–º–º'
                          f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å {ENERGY_WAFFLES} –∫–ö–∞–ª/100–≥—Ä', type=FLOAT)
portion_waffles_energy = round(portion_waffles * ENERGY_WAFFLES / 100, 2)
total_energy = total_energy + portion_waffles_energy
put_success(f'–í—ã –∑–∞–∫–∞–∑–∞–ª–∏ {portion_waffles} –≥—Ä–∞–º–º–æ–≤ –≤–∞—Ñ–ª–µ–π,\n'
            f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –ø–æ—Ä—Ü–∏–∏ {portion_waffles_energy}\n'
            f'–û–±—â–∞—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: {total_energy}')

portion_perch = pw_input(f'–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø–æ—Ä—Ü–∏—é –æ–∫—É–Ω—è, –≥—Ä–∞–º–º'
                          f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å {ENERGY_PERCH} –∫–ö–∞–ª/100–≥—Ä', type=FLOAT)
portion_perch_energy = round(portion_perch * ENERGY_PERCH / 100, 2)
total_energy = total_energy + portion_perch_energy
put_success(f'–í—ã –∑–∞–∫–∞–∑–∞–ª–∏ {portion_perch} –≥—Ä–∞–º–º–æ–≤ –æ–∫—É–Ω—è,\n'
            f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –ø–æ—Ä—Ü–∏–∏ {portion_perch_energy}\n'
            f'–û–±—â–∞—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: {total_energy}')

portion_kefir = pw_input(f'–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø–æ—Ä—Ü–∏—é –∫–µ—Ñ–∏—Ä–∞, –º–∏–ª–ª–∏–ª–∏—Ç—Ä–æ–≤'
                          f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å {ENERGY_KEFIR} –∫–ö–∞–ª/100–º–ª', type=FLOAT)
portion_kefir_energy = round(portion_kefir * ENERGY_KEFIR / 100, 2)
total_energy = total_energy + portion_kefir_energy
put_success(f'–í—ã –∑–∞–∫–∞–∑–∞–ª–∏ {portion_kefir} –º–∏–ª–ª–∏–ª–∏—Ç—Ä–æ–≤ –∫–µ—Ñ–∏—Ä–∞,\n'
            f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –ø–æ—Ä—Ü–∏–∏ {portion_kefir_energy}\n'
            f'–û–±—â–∞—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: {total_energy}')

portion_pepper = pw_input(f'–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø–æ—Ä—Ü–∏—é –ø–µ—Ä—Ü–∞, –≥—Ä–∞–º–º'
                          f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å {ENERGY_PEPPER} –∫–ö–∞–ª/100–≥—Ä', type=FLOAT)
portion_pepper_energy = round(portion_pepper * ENERGY_PEPPER / 100, 2)
total_energy = total_energy + portion_pepper_energy
put_success(f'–í—ã –∑–∞–∫–∞–∑–∞–ª–∏ {portion_pepper} –≥—Ä–∞–º–º–æ–≤ –ø–µ—Ä—Ü–∞,\n'
            f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –ø–æ—Ä—Ü–∏–∏ {portion_pepper_energy}\n'
            f'–û–±—â–∞—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: {total_energy}')

portion_parsley = pw_input(f'–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø–æ—Ä—Ü–∏—é –ø–µ—Ç—Ä—É—à–∫–∏, –≥—Ä–∞–º–º'
                          f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å {ENERGY_PARSLEY} –∫–ö–∞–ª/100–≥—Ä', type=FLOAT)
portion_parsley_energy = round(portion_parsley * ENERGY_PARSLEY / 100, 2)
total_energy = total_energy + portion_parsley_energy
put_success(f'–í—ã –∑–∞–∫–∞–∑–∞–ª–∏ {portion_parsley} –≥—Ä–∞–º–º–æ–≤ –ø–µ—Ç—Ä—É—à–∫–∏,\n'
            f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –ø–æ—Ä—Ü–∏–∏ {portion_parsley_energy}\n'
            f'–û–±—â–∞—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: {total_energy}')


total_cost = Decimal(total_energy) * Decimal(PRICE_ONE_KILO_CALORIE)
rounded_total_cost = total_cost.quantize(Decimal('0.00'))
put_success(f'–û–±–∞—â–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å: {total_energy} –∫–ö–∞–ª\n'
            f'–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: {rounded_total_cost} –≥—Ä–Ω.')

portion_bread = pw_input(f'–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é –ø–æ—Ä—Ü–∏—é —Ö–ª–µ–±–∞, –≥—Ä–∞–º–º'
                          f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å {ENERGY_BREAD} –∫–ö–∞–ª/100–≥—Ä', type=FLOAT)
portion_bread_energy = round(portion_bread * ENERGY_BREAD / 100, 2)
total_energy = total_energy + portion_bread_energy
put_success(f'–í—ã –∑–∞–∫–∞–∑–∞–ª–∏ {portion_bread} –≥—Ä–∞–º–º–æ–≤ –ø–µ—Ä—Ü–∞,\n'
            f'–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –ø–æ—Ä—Ü–∏–∏ {portion_bread_energy}\n'
            f'–û–±—â–∞—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: {total_energy}')


if total_energy < 1000:
    put_warning("–í—ã, –Ω–∞–≤–µ—Ä–Ω–æ–µ –æ—Å—Ç–∞–Ω–µ—Ç–µ—Å—å –≥–æ–ª–æ–¥–Ω—ã–º")
elif 1000 <= total_energy <= 1500:
    put_success("–≠—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—à –≤–∞—Ä–∏–∞–Ω—Ç —É–∂–∏–Ω–∞")
else:
    put_error("–í—ã, —Å—Ç–æ–ª—å–∫–æ –Ω–µ —Å—ä–µ–¥–∏—Ç–µ, —ç—Ç–æ –¥–µ–Ω—å–≥–∏ –≤ –º—É—Å–æ—Ä–∫—É")
